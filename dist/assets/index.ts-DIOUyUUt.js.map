{"version":3,"file":"index.ts-DIOUyUUt.js","sources":["../../src/background/index.ts"],"sourcesContent":["/**\n * Background Script - Chrome Extension Event Handlers\n * \n * This script runs in the background and handles:\n * 1. Context menu creation and click events\n * 2. Keyboard command shortcuts\n * 3. Messages between background and content scripts\n * \n * It acts as a coordinator between the user's actions (right-click, shortcuts)\n * and the content script's AI features.\n */\n\nchrome.runtime.onInstalled.addListener(() => {\n    try {\n      chrome.contextMenus.create({\n        id: 'summarize_page',\n        title: 'AI: Summarize this page',\n        contexts: ['page'],\n      })\n      chrome.contextMenus.create({\n        id: 'summarize_selection',\n        title: 'AI: Summarize selection',\n        contexts: ['selection'],\n      })\n      chrome.contextMenus.create({\n        id: 'explain_selection',\n        title: 'AI: Explain selection',\n        contexts: ['selection'],\n      })\n      chrome.contextMenus.create({\n        id: 'translate_selection',\n        title: 'AI: Translate selection',\n        contexts: ['selection'],\n      })\n    } catch (e) {\n      void 0\n    }\n  })\n  \n  function safeSendMessage(tabId: number, msg: any) {\n    try {\n      chrome.tabs.sendMessage(tabId, msg, () => {\n        void chrome.runtime.lastError\n      })\n    } catch {\n    }\n  }\n  \n  chrome.contextMenus.onClicked.addListener((info, tab) => {\n    const tabId = tab?.id\n    if (!tabId) return\n  \n    switch (info.menuItemId) {\n      case 'summarize_page':\n        safeSendMessage(tabId, { type: 'SUMMARIZE_PAGE' })\n        break\n      case 'summarize_selection':\n        safeSendMessage(tabId, { type: 'SUMMARIZE_SELECTION' })\n        break\n      case 'explain_selection':\n        safeSendMessage(tabId, { type: 'EXPLAIN_SELECTION' })\n        break\n      case 'translate_selection':\n        safeSendMessage(tabId, { type: 'TRANSLATE_SELECTION', targetLang: 'en' })\n        break\n    }\n  })\n  \n  chrome.commands.onCommand.addListener(async (command) => {\n    if (command !== 'toggle-panel') return\n    try {\n      const [tab] = await chrome.tabs.query({ active: true, currentWindow: true })\n      if (tab?.id) safeSendMessage(tab.id, { type: 'TOGGLE_PANEL' })\n    } catch {\n      // ignore\n    }\n  })\n  "],"names":["safeSendMessage","tabId","msg","info","tab","command"],"mappings":"AAYA,OAAO,QAAQ,YAAY,YAAY,IAAM,CACzC,GAAI,CACF,OAAO,aAAa,OAAO,CACzB,GAAI,iBACJ,MAAO,0BACP,SAAU,CAAC,MAAM,CAAA,CAClB,EACD,OAAO,aAAa,OAAO,CACzB,GAAI,sBACJ,MAAO,0BACP,SAAU,CAAC,WAAW,CAAA,CACvB,EACD,OAAO,aAAa,OAAO,CACzB,GAAI,oBACJ,MAAO,wBACP,SAAU,CAAC,WAAW,CAAA,CACvB,EACD,OAAO,aAAa,OAAO,CACzB,GAAI,sBACJ,MAAO,0BACP,SAAU,CAAC,WAAW,CAAA,CACvB,CACH,MAAY,CAEZ,CACF,CAAC,EAED,SAASA,EAAgBC,EAAeC,EAAU,CAChD,GAAI,CACF,OAAO,KAAK,YAAYD,EAAOC,EAAK,IAAM,CACnC,OAAO,QAAQ,SACtB,CAAC,CACH,MAAQ,CACR,CACF,CAEA,OAAO,aAAa,UAAU,YAAY,CAACC,EAAMC,IAAQ,CACvD,MAAMH,EAAQG,GAAK,GACnB,GAAKH,EAEL,OAAQE,EAAK,WAAA,CACX,IAAK,iBACHH,EAAgBC,EAAO,CAAE,KAAM,gBAAA,CAAkB,EACjD,MACF,IAAK,sBACHD,EAAgBC,EAAO,CAAE,KAAM,qBAAA,CAAuB,EACtD,MACF,IAAK,oBACHD,EAAgBC,EAAO,CAAE,KAAM,mBAAA,CAAqB,EACpD,MACF,IAAK,sBACHD,EAAgBC,EAAO,CAAE,KAAM,sBAAuB,WAAY,KAAM,EACxE,KAAA,CAEN,CAAC,EAED,OAAO,SAAS,UAAU,YAAY,MAAOI,GAAY,CACvD,GAAIA,IAAY,eAChB,GAAI,CACF,KAAM,CAACD,CAAG,EAAI,MAAM,OAAO,KAAK,MAAM,CAAE,OAAQ,GAAM,cAAe,EAAA,CAAM,EACvEA,GAAK,IAAIJ,EAAgBI,EAAI,GAAI,CAAE,KAAM,eAAgB,CAC/D,MAAQ,CAER,CACF,CAAC"}